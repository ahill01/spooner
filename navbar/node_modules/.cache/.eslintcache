[{"/Users/Allison/Development/code/phase-2/spooner/navbar/src/index.js":"1","/Users/Allison/Development/code/phase-2/spooner/navbar/src/App.js":"2","/Users/Allison/Development/code/phase-2/spooner/navbar/src/reportWebVitals.js":"3","/Users/Allison/Development/code/phase-2/spooner/navbar/src/components/navbar.jsx":"4","/Users/Allison/Development/code/phase-2/spooner/navbar/src/components/Review.js":"5"},{"size":500,"mtime":1648572665692,"results":"6","hashOfConfig":"7"},{"size":183,"mtime":1648576615915,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1648572665692,"results":"9","hashOfConfig":"7"},{"size":1477,"mtime":1648574406065,"results":"10","hashOfConfig":"7"},{"size":317,"mtime":1648573783981,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"75t1cj",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Allison/Development/code/phase-2/spooner/navbar/src/index.js",[],[],"/Users/Allison/Development/code/phase-2/spooner/navbar/src/App.js",[],[],"/Users/Allison/Development/code/phase-2/spooner/navbar/src/reportWebVitals.js",[],[],"/Users/Allison/Development/code/phase-2/spooner/navbar/src/components/navbar.jsx",["29","30","31","32","33","34"],[],"import React, { useState } from \"react\";\nimport \"./navbar.css\";\n\nfunction Navbar() {\n  const [active, setActive] = useState(\"nav__menu\");\n  const [icon, setIcon] = useState(\"nav__toggler\");\n  const navToggle = () => {\n    if (active === \"nav__menu\") {\n      setActive(\"nav__menu nav__active\");\n    } else setActive(\"nav__menu\");\n\n    // Icon Toggler\n    if (icon === \"nav__toggler\") {\n      setIcon(\"nav__toggler toggle\");\n    } else setIcon(\"nav__toggler\");\n  };\n  return (\n    <nav className=\"nav\">\n      <a href=\"#\" className=\"nav__brand\">\n        Spooner\n      </a>\n      <ul className={active}>\n        <li className=\"nav__item\">\n          <a href=\"#\" className=\"nav__link\">\n            Home\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"#\" className=\"nav__link\">\n            Reviews\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"#\" className=\"nav__link\">\n            Add a Review\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"#\" className=\"nav__link\">\n            My Reviews\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"#\" className=\"nav__link\">\n            About\n          </a>\n        </li>\n      </ul>\n      <div onClick={navToggle} className={icon}>\n        <div className=\"line1\"></div>\n        <div className=\"line2\"></div>\n        <div className=\"line3\"></div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;",["35","36"],"/Users/Allison/Development/code/phase-2/spooner/navbar/src/components/Review.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":19,"column":7,"nodeType":"39","endLine":19,"endColumn":42},{"ruleId":"37","severity":1,"message":"38","line":24,"column":11,"nodeType":"39","endLine":24,"endColumn":45},{"ruleId":"37","severity":1,"message":"38","line":29,"column":11,"nodeType":"39","endLine":29,"endColumn":45},{"ruleId":"37","severity":1,"message":"38","line":34,"column":11,"nodeType":"39","endLine":34,"endColumn":45},{"ruleId":"37","severity":1,"message":"38","line":39,"column":11,"nodeType":"39","endLine":39,"endColumn":45},{"ruleId":"37","severity":1,"message":"38","line":44,"column":11,"nodeType":"39","endLine":44,"endColumn":45},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-global-assign","no-unsafe-negation"]